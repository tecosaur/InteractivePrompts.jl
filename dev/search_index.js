var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Overview","page":"API","title":"Overview","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"In order to support InteractivePrompts, you need to specify how a certain display should handle (see Interface functions) a certain question (see Question types).","category":"page"},{"location":"api/","page":"API","title":"API","text":"While this page does detail the requirements, it is probably best paired with an example to get a sense of how this might look in practice.","category":"page"},{"location":"api/#Question-types","page":"API","title":"Question types","text":"","category":"section"},{"location":"api/#Foundational-types","page":"API","title":"Foundational types","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"InteractivePrompts.Prompt\nInteractivePrompts.Behaviour\nInteractivePrompts.Style\nInteractivePrompts.Question\nInteractivePrompts.Answer","category":"page"},{"location":"api/#InteractivePrompts.Prompt","page":"API","title":"InteractivePrompts.Prompt","text":"abstract type Prompt{T} end\n\nThe supertype of all specific prompt forms. Should produce an Answer{T}.\n\nTODO improve docstring\n\n\n\n\n\n","category":"type"},{"location":"api/#InteractivePrompts.Behaviour","page":"API","title":"InteractivePrompts.Behaviour","text":"struct Behaviour\n\nThe particular way a question should behave. This may consist of\n\nA default value (when applicable)\nA placeholder value (when applicable)\nA timeout applied to the question (in seconds)\nA callback function\nWhether the question should \"trap\" focus (trapfocus)\nWhether the question should be able to be aborted (abotable)\n\nTODO improve docstring\n\n\n\n\n\n","category":"type"},{"location":"api/#InteractivePrompts.Style","page":"API","title":"InteractivePrompts.Style","text":"struct Style\n\nA small selection of basic styling attributes that should be easily represented across multiple display types.\n\nThese attributes are:\n\nWhether the question should be shown in a compact form\nThe border the question should (or should't) have\nThe style of the question's text\nWhether the question should be shown in a modal format\n\nTODO improve docstring\n\n\n\n\n\n","category":"type"},{"location":"api/#InteractivePrompts.Question","page":"API","title":"InteractivePrompts.Question","text":"struct Question{P <: Prompt}\n\nA question, ready to be asked, consisting of:\n\nThe prompt (p) that the user answers\nThe behaviour the question should exhibit\nThe style the question should be shown with\n\nTODO improve docstring\n\n\n\n\n\n","category":"type"},{"location":"api/#InteractivePrompts.Answer","page":"API","title":"InteractivePrompts.Answer","text":"struct Answer{T}\n\nAn answer from a Question{Prompt{T}}. Holds a response that is either of type T, or the value nothing.\n\nThe flag aborted indicates whether the question was aborted or not.\n\nTODO improve docstring\n\n\n\n\n\n","category":"type"},{"location":"api/#Specific-forms","page":"API","title":"Specific forms","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"InteractivePrompts.Confirmation","category":"page"},{"location":"api/#InteractivePrompts.Confirmation","page":"API","title":"InteractivePrompts.Confirmation","text":"struct Confirmation <: Menu{Bool}\n\nA yes/no confirmation, optionally with custom yes/no strings.\n\nTODO improve docstring\n\n\n\n\n\n","category":"type"},{"location":"api/#Interface-functions","page":"API","title":"Interface functions","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"InteractivePrompts.render\nInteractivePrompts.clear\nInteractivePrompts.abort\nInteractivePrompts.focus\nInteractivePrompts.unfocus\nInteractivePrompts.answer","category":"page"},{"location":"api/#InteractivePrompts.render","page":"API","title":"InteractivePrompts.render","text":"render(d::AbstractDisplay, q::Question)\n\nRender the question q to the display d.\n\nProduces a representaton of the question's state.\n\nTODO improve docstring\n\n\n\n\n\n","category":"function"},{"location":"api/#InteractivePrompts.clear","page":"API","title":"InteractivePrompts.clear","text":"clear(d::AbstractDisplay, q::Question, state)\n\nClear the previous rendering of q in the display d.\n\nTODO improve docstring\n\n\n\n\n\n","category":"function"},{"location":"api/#InteractivePrompts.abort","page":"API","title":"InteractivePrompts.abort","text":"abort(d::AbstractDisplay, [q::Question, state::Any])\n\nAbort the attempt to answer q in the display d.\n\nMethods accepting q and state arguments must return the new state.\n\nTODO improve docstring\n\n\n\n\n\n","category":"function"},{"location":"api/#InteractivePrompts.focus","page":"API","title":"InteractivePrompts.focus","text":"focus(d::AbstractDisplay, [q::Question, state::Any])\n\nGive focus to the question q in display d. Exactly one question should have focus at any one time.\n\nMethods accepting q and state arguments must return the new state.\n\nTODO improve docstring\n\n\n\n\n\n","category":"function"},{"location":"api/#InteractivePrompts.unfocus","page":"API","title":"InteractivePrompts.unfocus","text":"unfocus(d::AbstractDisplay, [q::Question, state::Any])\n\nRemove focus from the question q in display d. Exactly one question should have focus at any one time.\n\nMethods accepting q and state arguments must return the new state.\n\nTODO improve docstring\n\n\n\n\n\n","category":"function"},{"location":"api/#InteractivePrompts.answer","page":"API","title":"InteractivePrompts.answer","text":"answer(d::AbstractDisplay, q::Question, state)\n\nExtract the answer to q (show in display d) from state.\n\nTODO improve docstring\n\n\n\n\n\n","category":"function"},{"location":"#Introduction","page":"InteractivePrompts","title":"Introduction","text":"","category":"section"},{"location":"conveniences/#Conveniences","page":"Conveniences","title":"Conveniences","text":"","category":"section"}]
}
